{"version":3,"sources":["helpers.js","Components/TopBar.jsx","Components/Position.jsx","Components/Board.jsx","Components/ModalComputer.jsx","Components/ModalOponent.jsx","Components/Menu.jsx","App.jsx","serviceWorker.js","index.js"],"names":["drawLine","idFrom","idTo","div1","document","getElementById","div2","svg","newLine","createElementNS","setAttribute","offsetLeft","offsetWidth","offsetTop","offsetHeight","appendChild","stringEmpty","str","revertSymbol","prevSymbol","getImage","name","path","TopBar","react_default","a","createElement","Navbar","bg","className","Image","src","Component","Position","_this","this","onClick","props","click","id","symbol","image","GameStep","Minimax","Board","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","moves","end","stats","games","playerWin","oponentWin","draw","board","placePiece","bind","assertThisInitialized","exitGame","restartGame","setState","objectSpread","setupData","side","player","_this2","setup","newBoard","toConsumableArray","prevState","checkEndGame","oponent","computerPlacePiece","_this3","symbols","huPlayer","aiPlayer","newboard","map","pos","index","step","level","endResult","endGame","forEach","combArr","every","maxMoves","elements","getElementsByTagName","parentNode","removeChild","exitgame","_this4","boardImg","backgroundImage","Container","Row","Col","index_es","icon","faUser","faBalanceScale","faLaptop","style","Components_Position","width","height","exit","restart","ModalComputer","handleFlip","handleLevel","flip","old","newlevel","side1","side2","lvl","Modal","assign","size","aria-labelledby","centered","Header","closeButton","Title","Body","Form","Group","as","Button","variant","block","Footer","onHide","ModalOponent","you","Menu","computer","childOponentHandler","childComputerHandler","childData","hideModals","lg","Components_ModalComputer","show","Components_ModalOponent","App","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","handleMenu","handleExit","menuData","Components_TopBar","Components_Board","Components_Menu","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.edd0f007.chunk.js","sourcesContent":["// Helping functions\n\n// Draw svg line between two divs\nexport function drawLine(idFrom, idTo) {\n    const div1 = document.getElementById('position' + idFrom);\n    const div2 = document.getElementById('position' + idTo);\n    const svg = document.getElementById('svg');\n    let newLine = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n    newLine.setAttribute('id', 'line');\n    newLine.setAttribute('class', 'animated jello');\n    newLine.setAttribute('x1', div1.offsetLeft + (div1.offsetWidth / 2));\n    newLine.setAttribute('y1', div1.offsetTop + (div1.offsetHeight / 2));\n    newLine.setAttribute('x2', div2.offsetLeft + (div2.offsetWidth / 2));\n    newLine.setAttribute('y2', div2.offsetTop + (div2.offsetHeight / 2));\n    svg.appendChild(newLine);\n}\n\n// Tic Tac Toe default game winning combinations\nexport function winningCombinations() {\n    return [\n        // Horizontal\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n\n        // Vertical\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n\n        // Diagonals\n        [0, 4, 8],\n        [2, 4, 6]\n    ]\n}\n\n// Tic Tac Toe default game starting side\nexport function startingSide() {//include argument if you want random side\n    if (arguments[0] !== undefined) {\n        return Math.random() < 0.5 ? 'X' : 'O';\n    } else {\n        return 'X'; // Default\n    }\n}\n\n// Check if string is empty\nexport function stringEmpty(str) {\n    return str === \"\";\n}\n\n// Revert symbol\nexport function revertSymbol(prevSymbol) {\n    return prevSymbol === 'X' ? 'O' : 'X';\n}\n\nexport function getImage(name) {\n    const path = './';\n    switch (name) {\n        case 'logo_big':\n            return path + 'logo_big.png';\n        case 'logo_small':\n            return path + 'logo_small.gif';\n        case 'logo_extra_small':\n            return path + 'logo_extra_small.png';\n        case 'board':\n            return path + 'board.png';\n        case 'exit':\n            return path + 'exit.png';\n        case 'o_dark':\n            return path + 'o_dark.png';\n        case 'o_light':\n            return path + 'o_light.png';\n        case 'restart':\n            return path + 'restart.png';\n        case 'x_light':\n            return path + 'x_light.png';\n        case 'x_dark':\n            return path + 'x_dark.png';\n        default:\n            return '';\n    }\n}\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { Navbar, Image } from 'react-bootstrap';\nimport { getImage } from '../helpers'; \n\nclass TopBar extends Component {\n    render() {\n        return (\n            <Navbar bg=\"light\">\n                <div className=\"mx-auto\">\n                    <Image src={getImage('logo_extra_small')} />\n                    Tic Tac Toe\n                </div>\n            </Navbar>\n        );\n    }\n}\n\nexport default TopBar;","import React, { Component } from 'react';\n// BOOTSTRAP\nimport { Image } from 'react-bootstrap';\nimport { getImage } from '../helpers';\n\nclass Position extends Component {\n    render() {\n        const image = () => {\n            switch (this.props.symbol) {\n                case 'X':\n                    return (<Image src={getImage('x_dark')} />);\n                case 'O':\n                    return (<Image src={getImage('o_dark')} />);\n                default:\n                    return;\n            }\n        };\n\n        return (\n            <div className=\"pos\" onClick={()=>this.props.click(this.props.id)} id={'position'+this.props.id} >\n                <div className='text_in_pos'>\n                    {\n                        image()\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Position;","import React, { Component } from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport Position from './Position';\nimport Minimax from 'tic-tac-toe-minimax';\nimport { stringEmpty, revertSymbol, winningCombinations, drawLine, getImage } from '../helpers';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLaptop } from '@fortawesome/free-solid-svg-icons'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { faBalanceScale } from '@fortawesome/free-solid-svg-icons'\n\nconst { GameStep } = Minimax;\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            moves: 0,\n            end: false,\n            stats: {\n                games: 0,\n                playerWin: 0,\n                oponentWin: 0,\n                draw: 0\n            },\n            board: ['', '', '', '', '', '', '', '', '']\n        }\n        this.placePiece = this.placePiece.bind(this);\n        this.exitGame = this.exitGame.bind(this);\n        this.restartGame = this.restartGame.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.setState({ ...this.props.setupData, side: this.props.setupData.player });\n    }\n\n    placePiece(id) {\n        // Game logic\n        const state = this.state;\n        if (state.board[id] === '' && !state.end) {//validate position\n            const board = state.board;\n            if (state.setup === 'oponent') {//oponent alternate move\n                const newBoard = [...board];\n                newBoard[id] = state.side;\n                this.setState(prevState => ({\n                    side: revertSymbol(prevState.side),\n                    board: newBoard,\n                    moves: prevState.moves + 1\n                }), () => {\n                    this.checkEndGame();\n                });\n            }\n            if (state.setup === 'computer') {//if human moves when play computer\n                if (state.side !== state.oponent) {\n                    const newBoard = [...board];\n                    newBoard[id] = state.side;\n                    this.setState(prevState => ({\n                        side: revertSymbol(prevState.side),\n                        board: newBoard,\n                        moves: prevState.moves + 1\n                    }), () => {\n                        this.computerPlacePiece();\n                    });\n                }\n            }\n        }\n    }\n\n    computerPlacePiece() {\n        const state = this.state;\n        const symbols = {\n            huPlayer: state.player,\n            aiPlayer: state.oponent\n        }\n        const newboard = [...state.board].map((pos, index) => {\n            return stringEmpty(pos) ? index : pos;\n        });\n        let step = GameStep(newboard, symbols, state.level).board;\n        step = step.map((pos) => {\n            return typeof pos !== 'string' ? '' : pos;\n        });\n        this.setState(prevState => ({\n            side: revertSymbol(prevState.side),\n            board: step,\n            moves: prevState.moves + 1\n        }), () => {\n            this.checkEndGame();\n        });\n    }\n\n    checkEndGame() {\n        const state = this.state;\n        const board = state.board;\n        let endResult = {...state.stats};\n        let endGame = false;\n        \n        winningCombinations().forEach((combArr) => {\n            if (combArr.every(id => !stringEmpty(board[id]))) {//positions not empty\n                if (combArr.every(id => board[id] === state.player)) {\n                    // Player wins\n                    endResult.playerWin += 1;\n                    endGame = true;\n                    drawLine(combArr[0], combArr[2]);\n                } else if (combArr.every(id => board[id] === state.oponent)) {\n                    // Oponent wins\n                    endResult.oponentWin += 1;\n                    endGame = true;\n                    drawLine(combArr[0], combArr[2]);\n                } \n            }\n        });\n        //computer makes one more move\n        let maxMoves = state.setup === 'computer' ? 10 : 9;\n        if (state.moves === maxMoves && !endGame) {\n            // Draw\n            endResult.draw += 1;\n            endGame = true;\n        }\n        this.setState({\n            end: endGame,\n            stats: endResult\n        });\n    }\n\n    restartGame() {\n        this.setState(prevState => ({\n            ...prevState,\n            moves: 0,\n            end: false,\n            board: ['', '', '', '', '', '', '', '', '']\n        }), () => {\n            //remove svg line\n            var elements = document.getElementsByTagName('line')\n            while (elements[0]) elements[0].parentNode.removeChild(elements[0])\n        });\n    }\n\n    exitGame() {\n        this.props.exitgame()\n    }\n\n    render() {\n        // console.log(this.state)\n        const restart = () => {\n            if (this.state.end) {\n                return (<Image src={getImage('restart')} width=\"40px\" height=\"40px\" className=\"mx-auto\"\n                    onClick={this.restartGame}\n                />)\n            }\n        }\n        const exit = () => {\n            if (this.state.end) {\n                return (<Image src={getImage('exit')} width=\"40px\" height=\"40px\" className=\"mx-auto\"\n                    onClick={this.exitGame}\n                />)\n            }\n        }\n\n        const boardImg = {\n            backgroundImage: `url(`+getImage('board')+`)`\n        }\n        \n        return (\n            <Container className=\"board_container p-5\">\n                <Row className=\"pb-4\">\n                    <Col className=\"text-center\">\n                        {this.state.setup === 'computer' ? (<FontAwesomeIcon icon={faUser} />) : 'Player:'}\n                        {' '}\n                        {this.state.stats.playerWin}\n                    </Col>\n                    <Col className=\"text-center\">\n                        {this.state.setup === 'computer' ? (<FontAwesomeIcon icon={faBalanceScale} />) : 'Draw:'}\n                        {' '}\n                        {this.state.stats.draw}\n                    </Col>\n                    <Col className=\"text-center\">\n                        {this.state.setup === 'computer' ? (<FontAwesomeIcon icon={faLaptop} />) : 'Oponent:'}\n                        {' '}\n                        {this.state.stats.oponentWin}\n                    </Col>\n                </Row>\n                <div className=\"board mx-auto\" style={boardImg}>\n                    <div className=\"board_row\">\n                        <Position id={0} click={this.placePiece} symbol={this.state.board[0]} />\n                        <Position id={3} click={this.placePiece} symbol={this.state.board[3]} />\n                        <Position id={6} click={this.placePiece} symbol={this.state.board[6]} />\n                    </div>\n                    <div className=\"board_row\">\n                        <Position id={1} click={this.placePiece} symbol={this.state.board[1]} />\n                        <Position id={4} click={this.placePiece} symbol={this.state.board[4]} />\n                        <Position id={7} click={this.placePiece} symbol={this.state.board[7]} />\n                    </div>\n                    <div className=\"board_row\">\n                        <Position id={2} click={this.placePiece} symbol={this.state.board[2]} />\n                        <Position id={5} click={this.placePiece} symbol={this.state.board[5]} />\n                        <Position id={8} click={this.placePiece} symbol={this.state.board[8]} />\n                    </div>\n                </div>\n                <svg id=\"svg\"></svg>\n                <Row className=\"pt-4\">\n                    {\n                        exit()\n                    }\n                    {\n                        restart()\n                    }\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Board;","import React, { Component } from 'react';\nimport { Button, Col, Row, Image, Modal, Form } from 'react-bootstrap';\nimport { getImage } from '../helpers';\n\nclass ModalComputer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFlip = this.handleFlip.bind(this);\n    this.handleLevel = this.handleLevel.bind(this);\n    this.state = {\n      flip: true,\n      level: 'Normal'\n    }\n  }\n\n  handleFlip() {\n    let old = this.state.flip;\n    this.setState({ flip: !old });\n  }\n\n  handleLevel(newlevel) {\n    this.setState({ level: newlevel });\n  }\n\n  render() {\n    let side1 = this.state.flip ? getImage('x_dark') : getImage('o_dark');\n    let side2 = this.state.flip ? getImage('o_dark') : getImage('x_dark');\n\n    let level = (lvl) => {\n      if (this.state.level === lvl) {\n        return 'custom'\n      } return 'light'\n    }\n    const data = () => {\n      return {\n        player: this.state.flip ? 'X' : 'O',\n        oponent: this.state.flip ? 'O' : 'X',\n        level: this.state.level\n      }\n    }\n\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\" className=\"cursive\">\n            Play with computer\n            </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group as={Row}>\n              <Col className=\"p-2\">\n                <Button variant={level('Easy')} className=\"cursive\" block onClick={() => this.handleLevel('Easy')}>Easy</Button>\n              </Col>\n              <Col className=\"p-2\">\n                <Button variant={level('Normal')} className=\"cursive\" block onClick={() => this.handleLevel('Normal')}>Normal</Button>\n              </Col>\n              <Col className=\"p-2\">\n                <Button variant={level('Hard')} className=\"cursive\" block onClick={() => this.handleLevel('Hard')}>Hard</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group className=\"p-3 mx-auto\" as={Row}>\n              <Col>\n                <h5 as={Col} className=\"text-center cursive\">Human</h5>\n                <div className=\"flip_move mx-auto\" onClick={this.handleFlip} as={Col}>\n                  <Image src={side1} />\n                </div>\n              </Col>\n              <Col>\n                <h5 as={Col} className=\"text-center cursive\">Computer</h5>\n                <div className=\"flip_move mx-auto\" onClick={this.handleFlip} as={Col}>\n                  <Image src={side2} />\n                </div>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"custom\" block className=\"cursive\"\n            onClick={() => this.props.onHide(data())}\n          >Start game</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default ModalComputer;","import React, { Component } from 'react';\nimport { Button, Col, Row, Image, Modal, Form } from 'react-bootstrap';\nimport { getImage } from '../helpers';\n\nclass ModalOponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flip: true\n    };\n    this.handleFlip = this.handleFlip.bind(this);\n  }\n\n  handleFlip() {\n    this.setState(prevState => ({\n      flip: !prevState.flip\n    }));\n  }\n\n  render() {\n    const you = this.state.flip ? getImage('x_dark') : getImage('o_dark');\n    const oponent = this.state.flip ? getImage('o_dark') : getImage('x_dark');\n    const data = () => {\n      return {\n        player: this.state.flip ? 'X' : 'O',\n        oponent: this.state.flip ? 'O' : 'X'\n      }\n    }\n\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\" className=\"cursive\">\n            Play with oponent\n            </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"p-3 mx-auto\" as={Row}>\n              <Col>\n                <h5 as={Col} className=\"text-center cursive\">You</h5>\n                <div className=\"flip_move mx-auto\" onClick={this.handleFlip} as={Col}>\n                  <Image src={you} />\n                </div>\n              </Col>\n              <Col>\n                <h5 as={Col} className=\"text-center cursive\">Oponent</h5>\n                <div className=\"flip_move mx-auto\" onClick={this.handleFlip} as={Col}>\n                  <Image src={oponent} />\n                </div>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"custom\" block className=\"customAccent cursive\"\n            onClick={() => this.props.onHide(data())}\n          >Start game</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default ModalOponent;","import React, { Component } from 'react';\nimport { Button, Col, Row, Container, Image } from 'react-bootstrap';\nimport ModalComputer from './ModalComputer';\nimport ModalOponent from './ModalOponent';\nimport { getImage } from '../helpers';\n\nclass Menu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {//modal\n            computer: false,\n            oponent: false\n        }\n        this.childOponentHandler = this.childOponentHandler.bind(this);\n        this.childComputerHandler = this.childComputerHandler.bind(this);\n    }\n\n    hideModals() {\n        this.setState({\n            computer: false,\n            oponent: false\n        });\n    }\n    childOponentHandler(childData) {\n        if (childData) {\n            this.props.setupData('oponent', childData);\n        } this.hideModals();\n    }\n    childComputerHandler(childData) {\n        if (childData) {\n            this.props.setupData('computer', childData);\n        } this.hideModals();\n    }\n\n\n    render() {\n        return (\n            <Container className='menu_container'>\n                <Row>\n                    <Image src={getImage('logo_big')} className=\"homepage_image mx-auto w-50 h-50 mt-5\" />\n                </Row>\n                <Row className=\"select_mode p-5 cursive\">\n                    <Col lg={5} className=\"mb-4 mx-auto\">\n                        <Button\n                            variant=\"secondary\" size=\"lg\" block\n                            onClick={() => this.setState({ computer: true, oponent: false })}\n                        >Human vs Computer</Button>\n                        <ModalComputer\n                            show={this.state.computer}\n                            onHide={this.childComputerHandler}\n                        />\n                    </Col>\n                    <Col lg={5} className=\"mx-auto\">\n                        <Button\n                            variant=\"secondary\" size=\"lg\" block\n                            onClick={() => this.setState({ computer: false, oponent: true })}\n                        >Human vs Human</Button>\n                        <ModalOponent\n                            show={this.state.oponent}\n                            onHide={this.childOponentHandler}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Menu;","import React, { Component } from 'react';\n\nimport './styles/App.css';\nimport 'animate.css';\n\nimport TopBar from './Components/TopBar';\nimport Board from './Components/Board';\nimport Menu from './Components/Menu';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      board: false,//false\n      setupData: {}\n    };\n    this.handleMenu = this.handleMenu.bind(this);\n    this.handleExit = this.handleExit.bind(this);\n  }\n\n  handleMenu(setup, menuData) {\n    this.setState({\n      board: true,\n      setupData: {\n        setup,\n        ...menuData\n      }\n    });\n  }\n\n  handleExit() {\n    this.setState({\n      board: false,\n      setupData: {}\n    })\n  }\n\n  render() {\n    const showBoard = () => {\n      if (this.state.board) {\n        return (<Board show={this.state.board} setupData={this.state.setupData} exitgame={this.handleExit} />);\n      } else {\n        return (<Menu show={!this.state.board} setupData={this.handleMenu} />)\n      }\n    }\n    return (\n      <div>\n        <TopBar />\n        <div className=\"fluid-container\">\n          {\n            showBoard()\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}